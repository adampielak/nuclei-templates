id: sensitive-config-exposure

info:
  name: Sensitive Configuration File Exposure Detection
  author: geeknik
  severity: high
  description: |
    Detects exposed configuration files containing actual secrets, API keys,
    database credentials, and other sensitive information with high-confidence
    pattern matching to reduce false positives.
  reference:
    - https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
    cvss-score: 7.5
    cwe-id: CWE-200,CWE-213
  tags: config,exposure,secrets,credentials

http:
  - method: GET
    path:
      - "{{BaseURL}}/config.js"
      - "{{BaseURL}}/config.json"
      - "{{BaseURL}}/settings.js"
      - "{{BaseURL}}/settings.json"
      - "{{BaseURL}}/app.config.js"
      - "{{BaseURL}}/.env.js"
      - "{{BaseURL}}/env.js"
      - "{{BaseURL}}/api/config"
      - "{{BaseURL}}/api/settings"

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      # Must have valid config structure
      - type: regex
        regex:
          - '(const|let|var|export|module\.exports)\s*=\s*\{' # JS config object
          - '^\s*\{[\s\S]*\}\s*$' # JSON object
        condition: or

      # Must contain actual secrets (high-confidence patterns)
      - type: regex
        regex:
          # AWS credentials
          - 'AKIA[0-9A-Z]{16}'
          - 'aws_secret_access_key["\s]*[:=]["\s]*[a-zA-Z0-9/+=]{40}'

          # API keys with entropy validation
          - 'api[_-]?key["\s]*[:=]["\s]*[a-zA-Z0-9]{32,}'
          - 'secret[_-]?key["\s]*[:=]["\s]*[a-zA-Z0-9]{32,}'

          # Database URLs with credentials
          - 'mongodb(\+srv)?://[^:]+:[^@]+@[^/]+/'
          - 'postgres://[^:]+:[^@]+@[^/]+/'
          - 'mysql://[^:]+:[^@]+@[^/]+/'

          # OAuth secrets
          - 'client_secret["\s]*[:=]["\s]*[a-zA-Z0-9_-]{32,}'

          # Private keys
          - '-----BEGIN (RSA |EC |DSA )?PRIVATE KEY-----'

          # JWT secrets
          - 'jwt[_-]?secret["\s]*[:=]["\s]*[a-zA-Z0-9_-]{16,}'
        condition: or

      # Exclude common false positives
      - type: word
        words:
          - "EXAMPLE_API_KEY"
          - "YOUR_API_KEY_HERE"
          - "placeholder"
          - "TODO"
          - "<html"
          - "<!DOCTYPE"
        negative: true

    extractors:
      - type: regex
        name: aws_key
        regex:
          - 'AKIA[0-9A-Z]{16}'

      - type: regex
        name: database_url
        regex:
          - '(mongodb|postgres|mysql)://[^:]+:[^@]+@[^/]+/[^\s"]*'

      - type: regex
        name: api_key
        regex:
          - '(api[_-]?key)["\s]*[:=]["\s]*([a-zA-Z0-9_-]{32,})'
        group: 2