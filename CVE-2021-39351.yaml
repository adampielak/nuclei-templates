id: CVE-2021-39351

info:
  name: "WP Bannerize 2.0.0 - 4.0.2 - Authenticated SQL Injection via id Parameter"
  author: topscoder
  severity: medium
  description: "The WP Bannerize WordPress plugin is vulnerable to authenticated SQL injection via the id parameter found in the ~/Classes/wpBannerizeAdmin.php file which allows attackers to exfiltrate sensitive information from vulnerable sites. This issue affects versions 2.0.0 - 4.0.2."
  reference:
    - https://www.wordfence.com/vulnerability-advisories/#CVE-2021-39351
    - https://plugins.trac.wordpress.org/browser/wp-bannerize/trunk/Classes/wpBannerizeAdmin.php#L1681
    - https://nvd.nist.gov/vuln/detail/CVE-2021-39351
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N
    cvss-score: 6.5
    cve-id: CVE-2021-39351
  metadata:
    fofa-query: "wp-content/plugins/wp-bannerize/"
    google-query: inurl:"/wp-content/plugins/wp-bannerize/"
    shodan-query: 'vuln:CVE-2021-39351'
  tags: cve,wordpress,wp-plugin,wp-bannerize,medium

http:
  - method: GET
    redirects: true
    max-redirects: 3
    path:
      - "{{BaseURL}}/wp-content/plugins/wp-bannerize/readme.txt"

    extractors:
      - type: regex
        name: version
        part: body
        group: 1
        internal: true
        regex:
          - "(?mi)Stable tag: ([0-9.]+)"

      - type: regex
        name: version
        part: body
        group: 1
        regex:
          - "(?mi)Stable tag: ([0-9.]+)"

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        words:
          - "wp-bannerize"
        part: body

      - type: dsl
        dsl:
          - compare_versions(version, '>= 2.0.0', '<= 4.0.2')