id: microsoft-sharepoint-amsi

info:
  name: Microsoft SharePoint Server - AMSI
  severity: info
  author: darses
  description: |
    Detects the status of SharePoint AMSI scanning by sending an EICAR test string in the request URL, header and body. The validation of this test is done by reviewing the IIS Webserver logs and checking if all requests except the 'none' test are all blocked before being processed by IIS, i.e. not visible in the logs. Note that the request body EICAR test can only be detected by SharePoint Subscription Edition. The Nuclei debug output still show connection resets when the request is blocked. If you receive an HTTP Response then SharePoint AMSI is not configured correctly. Finally note that the EICAR test string does not match the Microsoft SharePoint test string as this only works with Microsoft Defender AV (MDAV).
  remediation: |
    Enable SharePoint AMSI.
  reference:
    - https://learn.microsoft.com/en-us/sharepoint/security-for-sharepoint-server/configure-amsi-integration
  metadata:
    vendor: microsoft
    product: sharepoint_server
    shodan-query:
      - http.favicon.hash:-19436759
      - http.favicon.hash:-146638980
      - http.favicon.hash:-1969918997
      - http.html:"/_layouts/15/init.js"
      - "X-Sharepointhealthscore"
      - "Sprequestguid"
      - "X-Ms-Invokeapp"
      - http.component:"Microsoft SharePoint"
    fofa-query:
      - icon_hash="-19436759"
      - icon_hash="-146638980"
      - icon_hash="-1969918997"
      - body="/_layouts/15/init.js"
      - "X-Sharepointhealthscore"
      - "Sprequestguid"
      - "X-Ms-Invokeapp"
  tags: detect,microsoft,sharepoint

http:
  - method: GET
    path:
      - "{{BaseURL}}/_layouts/images/favicon.ico?amsiscantest=none"

    matchers:
      - type: dsl
        dsl:
          - "('-19436759' == mmh3(base64_py(body))) || ('-146638980' == mmh3(base64_py(body))) || ('-1969918997' == mmh3(base64_py(body)))"

  - method: GET
    path:
      - "{{BaseURL}}/_layouts/images/favicon.ico?amsiscantest=url&amsiscantest:X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"

    matchers:
      - type: dsl
        dsl:
          - "('-19436759' == mmh3(base64_py(body))) || ('-146638980' == mmh3(base64_py(body))) || ('-1969918997' == mmh3(base64_py(body)))"

  - method: GET
    path:
      - "{{BaseURL}}/_layouts/images/favicon.ico?amsiscantest=header"

    headers:
      amsiscantest: 'X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*'

    matchers:
      - type: dsl
        dsl:
          - "('-19436759' == mmh3(base64_py(body))) || ('-146638980' == mmh3(base64_py(body))) || ('-1969918997' == mmh3(base64_py(body)))"

  - method: GET
    path:
      - "{{BaseURL}}/_layouts/images/favicon.ico?amsiscantest=body"

    body: |
      X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*

    matchers:
      - type: dsl
        dsl:
          - "('-19436759' == mmh3(base64_py(body))) || ('-146638980' == mmh3(base64_py(body))) || ('-1969918997' == mmh3(base64_py(body)))"
