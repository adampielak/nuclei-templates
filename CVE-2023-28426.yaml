id: CVE-2023-28426

info:
  name: "SVG Sanitizer library <= 0.15.4 - Cross-Site Scripting Bypass"
  author: topscoder
  severity: high
  description: "The SVG Sanitizer library is vulnerable to XSS Bypass in versions up to, and including, 0.15.4. This may allow an attacker to successfully upload an SVG with persistent Cross-Site Scripting payloads in cases where a plugin is using this library to safely process SVG files."
  reference:
    - https://github.com/darylldoyle/svg-sanitizer/security/advisories/GHSA-xrqq-wqh4-5hg2
    - https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=2885114%40safe-svg%2Ftrunk&old=2779013%40safe-svg%2Ftrunk&sfp_email=&sfph_mail=#file16
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N
    cvss-score: 7.2
    cve-id: CVE-2023-28426
  metadata:
    fofa-query: "wp-content/plugins/safe-svg/"
    google-query: inurl:"/wp-content/plugins/safe-svg/"
    shodan-query: 'vuln:CVE-2023-28426'
  tags: cve,wordpress,wp-plugin,safe-svg,high

http:
  - method: GET
    redirects: true
    max-redirects: 3
    path:
      - "{{BaseURL}}/wp-content/plugins/safe-svg/readme.txt"

    extractors:
      - type: regex
        name: version
        part: body
        group: 1
        internal: true
        regex:
          - "(?mi)Stable tag: ([0-9.]+)"

      - type: regex
        name: version
        part: body
        group: 1
        regex:
          - "(?mi)Stable tag: ([0-9.]+)"

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        words:
          - "safe-svg"
        part: body

      - type: dsl
        dsl:
          - compare_versions(version, '<= 2.0.3')